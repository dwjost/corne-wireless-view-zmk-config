/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define CORNE_COLEMAK_DH   0
#define CORNE_QWERTY       1
#define CORNE_KEYPAD       2
#define CORNE_FUNCTION     3
#define CORNE_NAV          4
#define CORNE_DEF_MOD      5

#define QWERTY            CORNE_QWERTY

#define TD_HM_TAP_TERM     175
#define TD_Z_TAP_TERM      250
#define HM_TAP_TERM        180
#define HM_QUICK_TAP_TERM  150
#define HM_REQUIRE_IDLE_MS 125
#define TD_CW_TAP_TERM     200
#define LT_TAPPING_TERM    150

&lt {
    tapping-term-ms = <LT_TAPPING_TERM>;
};

/ {
    behaviors {

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <HM_TAP_TERM>;
            quick_tap_ms = <HM_QUICK_TAP_TERM>;
            require-prior-idle-ms = <HM_REQUIRE_IDLE_MS>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td_hm_j: tap_dance_hm_j_shift {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TD_HM_TAP_TERM>;
            bindings = <&hm RSHIFT J>, <&kp J>;
        };

        td_hm_k: tap_dance_hm_k_alt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <HM_TAP_TERM>;
            bindings = <&hm RALT K>, <&kp K>;
        };

        td_hm_l: tap_dance_hm_l_gui {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TD_HM_TAP_TERM>;
            bindings = <&hm RGUI L>, <&kp L>;
        };

        td_v: tap_dance_v_shift_v {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TD_HM_TAP_TERM>;
            bindings = <&kp V>, <&kp LS(V)>;
        };

        td_z: tap_dance_z_ctrl_z {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TD_Z_TAP_TERM>;
            bindings = <&lt CORNE_KEYPAD Z>, <&kp RC(Z)>;
        };

        td_q_esc: tap_dance_q_escape {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TD_HM_TAP_TERM>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        td_qwerty: tap_dance_to_qwerty {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TD_HM_TAP_TERM>;
            bindings = <&none>, <&to QWERTY>;
        };

        td_corne_q: tap_dance_to_corne_qwerty {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TD_HM_TAP_TERM>;
            bindings = <&kp Q>, <&to CORNE_QWERTY>;
        };

        td_corne_c: tap_dance_to_corne_colemak {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TD_HM_TAP_TERM>;
            bindings = <&kp Q>, <&to CORNE_COLEMAK_DH>;
        };

        td_corne_cw_nav: tap_dance_caps_corne {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TD_CW_TAP_TERM>;
            bindings = <&lt CORNE_NAV SPACE>, <&caps_word>;
        };
    };


        keymap {
                compatible = "zmk,keymap";

        corne_colemak_dh {
            display-name = "Colemak";
            bindings = <
  &kp TAB    &td_corne_q        &kp W                &kp F                 &kp P                 &kp B                  &kp J                &kp L         &kp U           &kp Y          &kp SEMI        &kp BSPC
  &kp LCTRL  &hm LCTRL A        &hm LGUI R           &hm LALT S            &hm LSHIFT T          &kp G                  &kp M                &hm RSHIFT N  &hm RALT E      &hm RGUI I    &hm RCTRL O      &kp SQT
  &kp LSHFT  &td_z              &lt CORNE_DEF_MOD X  &lt CORNE_FUNCTION C  &kp D                 &kp V                  &kp K                &hm RSHIFT H  &hm RALT COMMA  &hm  RGUI DOT  &hm RCTRL FSLH  &kp ESC
                                                     &kp BSPC              &lt CORNE_KEYPAD ESC  &td_corne_cw_nav       &lt CORNE_NAV ENTER  &kp SPACE  &lt CORNE_KEYPAD ESC
>;
        };

        qwerty_layer {
                display-name = "Qwerty";
            bindings = <
  &kp TAB    &td_corne_c         &kp W                &kp E                 &kp R                 &kp T                  &kp Y                &kp U      &kp I                &kp  O                 &kp P                  &kp BSPC
  &kp LCTRL  &hm LCTRL A         &hm LGUI S           &hm LALT D            &hm LSHIFT F          &kp G                  &kp H                &td_hm_j   &td_hm_k             &td_hm_l               &hm RCTRL SEMI         &kp SQT
  &kp LSHFT  &td_z               &lt CORNE_DEF_MOD X  &lt CORNE_FUNCTION C  &td_v                 &kp B                  &kp N                &kp M      &lt CORNE_NAV COMMA  &lt CORNE_DEF_MOD DOT  &lt CORNE_KEYPAD FSLH  &kp ESC
                                                      &kp BSPC              &lt CORNE_KEYPAD ESC  &td_corne_cw_nav       &lt CORNE_NAV ENTER  &kp SPACE  &lt CORNE_KEYPAD ESC
 >;
        };

        corne_layer_keypad {
            display-name = "Keypad";
             bindings = <
  &kp TAB    &kp N1           &kp N2          &kp N3          &kp N4           &kp N5      &kp N6           &kp N7          &kp N8          &kp N9           &kp N0  &kp BSPC
  &kp LCTRL  &hm LCTRL DQT    &hm LGUI TILDE  &hm LALT GRAVE  &hm LSHIFT LBRC  &kp LBKT    &hm RSHIFT RBKT  &hm RALT RBRC   &hm RGUI MINUS  &hm RCTRL UNDER  &kp SQT &kp SQT
  &kp LSHFT  &trans           &kp X           &none           &kp PIPE         &kp BSLH    &kp FSLH         &kp EQUAL       &kp COMMA       &kp DOT          &trans  &kp ESC
                                              &kp DEL         &trans           &kp LSHIFT  &none            &hm RSHIFT ESC  &kp TAB
>;
};

corne_layer_fn {
    display-name = "Fuction";
    bindings = <
  &kp TAB    &kp F1   &kp F2   &kp F3   &kp F4        &kp F5       &kp F6    &kp F7      &kp F8     &kp F9     &kp F10 &kp BSPC
  &kp LCTRL  &kp F11  &kp F12  &none    &kp C_VOL_UP  &kp C_PLAY   &kp LEFT  &kp DOWN    &kp UP     &kp RIGHT  &none   &kp SQT
  &kp LSHFT  &none    &none    &trans   &kp C_VOL_DN  &kp INS      &kp HOME  &kp PG_DN   &kp PG_UP  &kp END    &none   &kp ESC
                               &kp DEL  &kp LSHIFT    &kp LALT     &kp ESC   &kp RSHIFT  &kp TAB
                     >;
};

corne_layer_nav {
    display-name = "Nav";
    bindings = <
  &kp TAB    &kp LG(N1)  &kp LG(N2)  &kp LG(N3)    &kp LG(N4)    &kp LG(N5)   &kp DOWN  &kp RIGHT  &kp LG(N8)  &kp LG(N9)  &kp LG(N0) &kp BSPC
  &kp LCTRL  &kp LCTRL   &kp LGUI    &kp LALT      &kp LSHIFT    &kp C_PLAY   &kp LEFT  &kp DOWN   &kp UP      &kp RIGHT   &kp PG_UP  &kp SQT
  &kp LSHFT  &none       &none       &kp C_VOL_DN  &kp C_VOL_UP  &kp INS      &kp UP    &kp LEFT   &kp HOME    &kp END     &kp PG_DN  &kp ESC
                                     &kp LSHIFT    &kp DEL       &none        &kp ESC   &kp TAB    &kp RSHIFT
                     >;
        };

                corne_mod_layer {
// -----------------------------------------------------------------------------------------
// | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
// | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
// | BTCLR |     |     |     |     |     |     |     |     |     |     |
//               | GUI |     | SPC |     | ENT | ESC | TAB |
                        display-name = "Mod";
                        bindings = <
  &kp TAB    &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT        &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR &kp BSPC
  &kp LCTRL  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &kp LEFT  &kp DOWN  &kp UP          &kp RIGHT &trans   &kp SQT
  &kp LSHFT  &bt BT_CLR   &trans       &trans       &trans       &trans           &trans    &trans    &trans          &trans    &trans   &kp ESC
                                       &kp LGUI     &trans       &kp SPACE        &kp RET   &kp ESC   &kp TAB
                        >;
                };

        };
};
